apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-world-node
  namespace: default
  labels:
    app: hello-world-node
    version: v1

spec:
  replicas: 3  # High Availability - לפחות 3 replicas
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: hello-world-node
  template:
    metadata:
      labels:
        app: hello-world-node
        version: v1

    spec:
      # Pod Anti-Affinity - עונה על דרישת multi-AZ replica distribution
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - hello-world-node
              topologyKey: kubernetes.io/hostname
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - name: hello-world-node
        image: 760370564012.dkr.ecr.us-east-1.amazonaws.com/omer/hello-world-node:latest
        ports:
        - containerPort: 3000
          name: http
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"

      restartPolicy: Always
      terminationGracePeriodSeconds: 30 