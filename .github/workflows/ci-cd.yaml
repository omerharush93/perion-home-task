name: CI/CD Pipeline - Hello World Node.js

on:
  push:
    branches: [ main ]
    paths:
      - 'app/**'
      - 'k8s/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'app/**'
      - 'k8s/**'
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: omer/hello-world-node
  EKS_CLUSTER_NAME: omer-perion-cluster

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      app_changed: ${{ steps.changes.outputs.app_changed }}
      image_uri: ${{ steps.build.outputs.image_uri }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Detect app changes
        id: changes
        run: |
          echo "app_changed=false" >> $GITHUB_OUTPUT
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^app/'; then
            echo "app_changed=true" >> $GITHUB_OUTPUT
          fi

      - name: AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: ECR login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & push Docker image
        if: steps.changes.outputs.app_changed == 'true'
        id: build
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd app/hello-world-node
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image_uri=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Run tests
        if: steps.changes.outputs.app_changed == 'true'
        run: |
          cd app/hello-world-node
          npm install
          npm test || true

      - name: Trivy scan
        if: steps.changes.outputs.app_changed == 'true'
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Build & Test Success
        if: success()
        run: |
          echo "✅ Build & Test job completed!"
          if [ "${{ steps.changes.outputs.app_changed }}" == "true" ]; then
            echo "Image built: ${{ steps.build.outputs.image_uri }}"
          fi

  update-manifest:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Detect k8s changes
        id: changes_k8s
        run: |
          echo "k8s_changed=false" >> $GITHUB_OUTPUT
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^k8s/'; then
            echo "k8s_changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Update manifest with new image
        if: needs.build-and-test.outputs.app_changed == 'true' && github.ref == 'refs/heads/main'
        run: |
          sed -i "s|image:.*|image: ${{ needs.build-and-test.outputs.image_uri }}|g" k8s/deployment.yaml
          sed -i "s|version:.*|version: \"${{ github.sha }}\"|g" k8s/deployment.yaml
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add k8s/deployment.yaml
          git commit -m "Update image to ${{ github.sha }}" || echo "No changes to commit"
          git push

      - name: Commit k8s manifest changes
        if: steps.changes_k8s.outputs.k8s_changed == 'true' && needs.build-and-test.outputs.app_changed != 'true' && github.ref == 'refs/heads/main'
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add k8s/
          git commit -m "Update k8s manifests" || echo "No changes to commit"
          git push

      - name: Update Manifest Success
        if: success()
        run: |
          echo "✅ Update Manifest job completed!"
          if [ "${{ needs.build-and-test.outputs.app_changed }}" == "true" ]; then
            echo "Deployment manifest updated with image: ${{ needs.build-and-test.outputs.image_uri }}"
          fi
          if [ "${{ steps.changes_k8s.outputs.k8s_changed }}" == "true" ]; then
            echo "K8s manifests updated."
          fi
          echo "ArgoCD will automatically sync the deployment"